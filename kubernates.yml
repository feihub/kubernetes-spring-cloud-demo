#############################redis######################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: default
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis
          imagePullPolicy: IfNotPresent
          ports:
            - name: redis
              containerPort: 6379
          volumeMounts:
            - mountPath: /data
              name: redis
      volumes:
        - name: redis
          hostPath:
            path: /data
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
    - name: redis
      port: 6379
      targetPort: 6379

---
#############################rabbitmq###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: default
spec:
  selector:
    matchLabels:
      app: rabbitmq
  replicas: 1
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq
          imagePullPolicy: IfNotPresent
          ports:
            - name: rabbitmq
              containerPort: 6379
          volumeMounts:
            - mountPath: /data
              name: rabbitmq
      volumes:
        - name: rabbitmq
          hostPath:
            path: /data
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: rabbitmq
  ports:
    - name: rabbitmq
      port: 5672
      targetPort: 5672

---
#############################config######################################
apiVersion: v1
kind: Service
metadata:
  name: config-external
  namespace: default
spec:
  type: ExternalName
  externalName: github.com

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config
  namespace: default
spec:
  selector:
    matchLabels:
      app: config
  replicas: 1
  template:
    metadata:
      labels:
        app: config
    spec:
      containers:
        - name: config
          image: 192.168.0.107:5000/docker-registry/config:1.0-SNAPSHOT
          imagePullPolicy: IfNotPresent
          ports:
            - name: config
              containerPort: 8084

---
apiVersion: v1
kind: Service
metadata:
  name: config
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: config
  ports:
    - name: config
      port: 8082
      targetPort: 8082

---
#############################oauth2######################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2
  namespace: default
spec:
  selector:
    matchLabels:
      app: oauth2
  replicas: 1
  template:
    metadata:
      labels:
        app: oauth2
    spec:
      containers:
        - name: oauth2
          image: 192.168.0.107:5000/docker-registry/oauth2:1.0-SNAPSHOT
          imagePullPolicy: IfNotPresent
          ports:
            - name: oauth2
              containerPort: 8016

---
apiVersion: v1
kind: Service
metadata:
  name: oauth2
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: oauth2
  ports:
    - name: oauth2
      port: 8016
      targetPort: 8016

---
#############################zuul######################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zuul
  namespace: default
spec:
  selector:
    matchLabels:
      app: zuul
  replicas: 1
  template:
    metadata:
      labels:
        app: zuul
    spec:
      containers:
        - name: zuul
          image: 192.168.0.107:5000/docker-registry/zuul:1.0-SNAPSHOT
          imagePullPolicy: IfNotPresent
          ports:
            - name: zuul
              containerPort: 8086

---
apiVersion: v1
kind: Service
metadata:
  name: zuul
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: zuul
  ports:
    - name: zuul
      port: 8086
      targetPort: 8086

---
#############################business######################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: business
  namespace: default
spec:
  selector:
    matchLabels:
      app: business
  replicas: 1
  template:
    metadata:
      labels:
        app: business
    spec:
      containers:
        - name: business
          image: 192.168.0.107:5000/docker-registry/business:1.0-SNAPSHOT
          imagePullPolicy: IfNotPresent
          ports:
            - name: business
              containerPort: 8088

---
apiVersion: v1
kind: Service
metadata:
  name: business
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: business
  ports:
    - name: business
      port: 8088
      targetPort: 8088

---
#############################business2######################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: business2
  namespace: default
spec:
  selector:
    matchLabels:
      app: business2
  replicas: 1
  template:
    metadata:
      labels:
        app: business2
    spec:
      containers:
        - name: business2
          image: 192.168.0.107:5000/docker-registry/business2:1.0-SNAPSHOT
          imagePullPolicy: IfNotPresent
          ports:
            - name: business2
              containerPort: 8014

---
apiVersion: v1
kind: Service
metadata:
  name: business2
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: business2
  ports:
    - name: business2
      port: 8014
      targetPort: 8014

---
#############################turbine######################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: turbine
  namespace: default
spec:
  selector:
    matchLabels:
      app: turbine
  replicas: 1
  template:
    metadata:
      labels:
        app: turbine
    spec:
      containers:
        - name: turbine
          image: 192.168.0.107:5000/docker-registry/turbine:1.0-SNAPSHOT
          imagePullPolicy: IfNotPresent
          ports:
            - name: turbine
              containerPort: 8010

---
apiVersion: v1
kind: Service
metadata:
  name: turbine
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: turbine
  ports:
    - name: turbine
      port: 8010
      targetPort: 8010

---
#############################zipkin######################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zipkin
  namespace: default
spec:
  selector:
    matchLabels:
      app: zipkin
  replicas: 1
  template:
    metadata:
      labels:
        app: zipkin
    spec:
      containers:
        - name: zipkin
          image: 192.168.0.107:5000/docker-registry/zipkin:1.0-SNAPSHOT
          imagePullPolicy: IfNotPresent
          ports:
            - name: zipkin
              containerPort: 8012

---
apiVersion: v1
kind: Service
metadata:
  name: zipkin
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: zipkin
  ports:
    - name: zipkin
      port: 8012
      targetPort: 8012
---
#############################ingress######################################
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nginx
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
    - host: zuul.test.spring
      http:
        paths:
          - path: /
            backend:
              serviceName: zuul
              servicePort: 8086
    - host: oauth2.test.spring
      http:
        paths:
          - path: /
            backend:
              serviceName: oauth2
              servicePort: 8016
    - host: turbine.test.spring
      http:
        paths:
          - path: /
            backend:
              serviceName: turbine
              servicePort: 8010
    - host: zipkin.test.spring
      http:
        paths:
          - path: /
            backend:
              serviceName: zipkin
              servicePort: 8012
