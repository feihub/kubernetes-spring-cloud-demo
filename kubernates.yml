#############################eureka######################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eureka-deployment
  namespace: default
spec:
  replicas: 1
  selector:
      app: eureka
  template:
    metadata:
      labels:
        app: eureka
    spec:
      containers:
      - name: eureka
        image: eureka
        imagePullPolicy: IfNotPresent
        ports:
        - name: eureka-http
          containerPort: 8084

---
apiVersion: v1
kind: Service
metadata:
  name: eureka-service
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: eureka
  ports:
  - name: eureka-service-http
    port: 8084
    targetPort: 8084

---
#############################config######################################
apiVersion: v1
kind: Service
metadata:
  name: config-external-service
  namespace: default
spec:
  type: ExternalName
  externalName: github.com

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-deployment
  namespace: default
spec:
  replicas: 1
  selector:
      app: config
  template:
    metadata:
      labels:
        app: config
    spec:
      containers:
      - name: config
        image: config
        imagePullPolicy: IfNotPresent
        ports:
        - name: config-http
          containerPort: 8084
      initContainers:
      - name: init-config-deployment
        image: busybox:1.28
        command: ['sh', '-c', 'until nslookup eureka; do echo waiting for eureka; sleep 2; done;']

---
apiVersion: v1
kind: Service
metadata:
  name: config-service
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: config
  ports:
  - name: config-service-http
    port: 8082
    targetPort: 8082

---
#############################oauth2######################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-deployment
  namespace: default
spec:
  replicas: 1
  selector:
      app: oauth2
  template:
    metadata:
      labels:
        app: oauth2
    spec:
      containers:
      - name: oauth2
        image: oauth2
        imagePullPolicy: IfNotPresent
        ports:
        - name: oauth2-http
          containerPort: 8016
      initContainers:
      - name: init-oauth2-deployment
        image: busybox:1.28
        command: ['sh', '-c', 'until nslookup config; do echo waiting for config; sleep 2; done;']

---
apiVersion: v1
kind: Service
metadata:
  name: oauth2-service
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: oauth2
  ports:
  - name: oauth2-service-http
    port: 8016
    targetPort: 8016

---
#############################zuul######################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zuul-deployment
  namespace: default
spec:
  replicas: 1
  selector:
      app: zuul
  template:
    metadata:
      labels:
        app: zuul
    spec:
      containers:
      - name: zuul
        image: zuul
        imagePullPolicy: IfNotPresent
        ports:
        - name: zuul-http
          containerPort: 8086
      initContainers:
      - name: init-zuul-deployment
        image: busybox:1.28
        command: ['sh', '-c', 'until nslookup config; do echo waiting for config; sleep 2; done;']

---
apiVersion: v1
kind: Service
metadata:
  name: zuul-service
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: zuul
  ports:
  - name: zuul-service-http
    port: 8086
    targetPort: 8086

---
#############################ingress######################################
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nginx-ingress
spec:
  rules:
  - host: localhost
    http:
      paths:
      - path: /
        backend:
          serviceName: zuul-service
          servicePort: 8086 






